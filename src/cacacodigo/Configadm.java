/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cacacodigo;

import java.awt.Color;

import static java.awt.Color.*;

import javax.swing.BorderFactory;
import javax.swing.plaf.basic.BasicScrollBarUI;


/**
 *
 * @author 22.00077-0
 */
public class Configadm extends javax.swing.JFrame {

    /**
     * Creates new form configadm
     */
    
    private String usuario;
    
    public Configadm(String usuario) {
        super("Caça-Código");
        
        this.usuario = usuario;
        
        initComponents();
        editText.setOpaque(false);
        editText.setBackground(new Color(0, 0, 0, 90));
        editText.setBorder(BorderFactory.createMatteBorder(5, 5, 5, 5, BLACK));
        taPerguntasBd.setOpaque(false);
        taPerguntasBd.setBackground(new Color(0, 0, 0, 90));
        painelPerguntas.getViewport().setOpaque(false);
        painelPerguntas.setOpaque(false);
        painelPerguntas.setViewportBorder(null);
        painelPerguntas.setBorder(BorderFactory.createMatteBorder(5, 5, 5, 5, BLACK));
        painelPerguntas.getVerticalScrollBar().setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, GRAY));
        painelPerguntas.getVerticalScrollBar().setBackground(new Color(0, 0, 0));
        painelPerguntas.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = Color.GRAY;
            }
        });
        painelPerguntas.getHorizontalScrollBar().setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, GRAY));
        painelPerguntas.getHorizontalScrollBar().setBackground(new Color(0, 0, 0));
        painelPerguntas.getHorizontalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = Color.GRAY;
            }
        });
        
        editTextResp.setOpaque(false);
        editTextResp.setBackground(new Color(0, 0, 0, 90));
        editTextResp.setBorder(BorderFactory.createMatteBorder(5, 5, 5, 5, BLACK));
        taRespostasBd.setOpaque(false);
        taRespostasBd.setBackground(new Color(0, 0, 0, 90));
        painelRespostas.getViewport().setOpaque(false);
        painelRespostas.setOpaque(false);
        painelRespostas.setViewportBorder(null);
        painelRespostas.setBorder(BorderFactory.createMatteBorder(5, 5, 5, 5, BLACK));
        painelRespostas.getVerticalScrollBar().setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, GRAY));
        painelRespostas.getVerticalScrollBar().setBackground(new Color(0, 0, 0));
        painelRespostas.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = Color.GRAY;
            }
        });
        painelRespostas.getHorizontalScrollBar().setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, GRAY));
        painelRespostas.getHorizontalScrollBar().setBackground(new Color(0, 0, 0));
        painelRespostas.getHorizontalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = Color.GRAY;
            }
        });
        
        setVisible(true);
        
        Banco bd = new Banco(ConnFactory.conectar());
        String dados[][] = bd.pegarPerguntasTodas();
        ConnFactory.desconectar(bd.getConn());
        
        for (int i = 0; i< dados[0].length; i++){
            taPerguntasBd.setText(taPerguntasBd.getText() + "#" + (i+1) + ") " + dados[0][i] + "\n");
            taRespostasBd.setText(taRespostasBd.getText() + "#" + (i+1) + ") " + dados[1][i] + "\n");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editText = new javax.swing.JTextField();
        painelPerguntas = new javax.swing.JScrollPane();
        taPerguntasBd = new javax.swing.JTextArea();
        inserir = new javax.swing.JLabel();
        adicionada = new javax.swing.JLabel();
        btAdicionar = new javax.swing.JButton();
        editTextResp = new javax.swing.JTextField();
        inserir1 = new javax.swing.JLabel();
        adicionada1 = new javax.swing.JLabel();
        painelRespostas = new javax.swing.JScrollPane();
        taRespostasBd = new javax.swing.JTextArea();
        btnSair = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        editText.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        editText.setForeground(new java.awt.Color(255, 255, 255));
        editText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTextActionPerformed(evt);
            }
        });
        getContentPane().add(editText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 380, 130));

        taPerguntasBd.setEditable(false);
        taPerguntasBd.setColumns(20);
        taPerguntasBd.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        taPerguntasBd.setForeground(new java.awt.Color(255, 255, 255));
        taPerguntasBd.setLineWrap(true);
        taPerguntasBd.setRows(5);
        painelPerguntas.setViewportView(taPerguntasBd);

        getContentPane().add(painelPerguntas, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 380, 160));

        inserir.setBackground(new java.awt.Color(102, 102, 102));
        inserir.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        inserir.setForeground(new java.awt.Color(255, 255, 255));
        inserir.setText("               Inserir Pergunta");
        inserir.setOpaque(true);
        getContentPane().add(inserir, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 380, 30));

        adicionada.setBackground(new java.awt.Color(102, 102, 102));
        adicionada.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        adicionada.setForeground(new java.awt.Color(255, 255, 255));
        adicionada.setText("          Perguntas Adicionadas");
        adicionada.setToolTipText("");
        adicionada.setOpaque(true);
        getContentPane().add(adicionada, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 380, 30));

        btAdicionar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btAdicionar.setText("Adicionar");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });
        getContentPane().add(btAdicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 540, 150, 40));

        editTextResp.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        editTextResp.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(editTextResp, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 380, 130));

        inserir1.setBackground(new java.awt.Color(102, 102, 102));
        inserir1.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        inserir1.setForeground(new java.awt.Color(255, 255, 255));
        inserir1.setText("               Inserir Resposta");
        inserir1.setOpaque(true);
        getContentPane().add(inserir1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, 380, 30));

        adicionada1.setBackground(new java.awt.Color(102, 102, 102));
        adicionada1.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        adicionada1.setForeground(new java.awt.Color(255, 255, 255));
        adicionada1.setText("         Respostas Adicionadas");
        adicionada1.setToolTipText("");
        adicionada1.setOpaque(true);
        getContentPane().add(adicionada1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 380, 30));

        taRespostasBd.setEditable(false);
        taRespostasBd.setColumns(20);
        taRespostasBd.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        taRespostasBd.setForeground(new java.awt.Color(255, 255, 255));
        taRespostasBd.setLineWrap(true);
        taRespostasBd.setRows(5);
        painelRespostas.setViewportView(taRespostasBd);

        getContentPane().add(painelRespostas, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 330, 380, 160));

        btnSair.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSair.setText("SAIR");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 543, 100, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cacacodigo/hack.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editTextActionPerformed

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
    Banco bd = new Banco(ConnFactory.conectar());
    
    if (bd.inserirPergunta(editText.getText(), editTextResp.getText())){
        javax.swing.JOptionPane.showMessageDialog(null, "Pergunta e resposta inseridos com sucesso.");
    }
    else{
        javax.swing.JOptionPane.showMessageDialog(null, "Falha ao inserir perguntas.\nPerguntas devem ter no máximo 150 caracteres e respostas no máximo 15 caracteres");
    }
    
    ConnFactory.desconectar(bd.getConn());
    }//GEN-LAST:event_btAdicionarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
        TelaEscolha te = new TelaEscolha(usuario);
    }//GEN-LAST:event_btnSairActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adicionada;
    private javax.swing.JLabel adicionada1;
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btnSair;
    private javax.swing.JTextField editText;
    private javax.swing.JTextField editTextResp;
    private javax.swing.JLabel inserir;
    private javax.swing.JLabel inserir1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane painelPerguntas;
    private javax.swing.JScrollPane painelRespostas;
    private javax.swing.JTextArea taPerguntasBd;
    private javax.swing.JTextArea taRespostasBd;
    // End of variables declaration//GEN-END:variables
}
